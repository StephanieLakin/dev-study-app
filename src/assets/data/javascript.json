[
    {
      "question": "What is JavaScript?",
      "answer": "JavaScript is a high-level, interpreted programming language that conforms to the ECMAScript specification and is widely used for web development.",
      "topic": "JavaScript"
    },
    {
      "question": "What are the data types in JavaScript?",
      "answer": "JavaScript data types include Number, String, Boolean, Object, Undefined, Null, Symbol, and BigInt.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between '==' and '===' in JavaScript?",
      "answer": "'==' compares values for equality with type conversion, while '===' compares values for equality without type conversion.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a closure in JavaScript?",
      "answer": "A closure is a function that retains access to its outer scope, even after the outer function has finished executing.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the 'this' keyword in JavaScript?",
      "answer": "The 'this' keyword refers to the object that is currently executing the function. Its value can vary depending on how the function is called.",
      "topic": "JavaScript"
    },
    {
      "question": "What are arrow functions in JavaScript?",
      "answer": "Arrow functions are a concise syntax for writing function expressions. They do not have their own 'this' context and are lexically scoped.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the event loop in JavaScript?",
      "answer": "The event loop is a mechanism that allows JavaScript to perform non-blocking I/O operations by managing the execution of multiple pieces of code in an asynchronous manner.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between 'var', 'let', and 'const' in JavaScript?",
      "answer": "'var' is function-scoped, 'let' and 'const' are block-scoped. 'const' is used to declare variables that cannot be reassigned.",
      "topic": "JavaScript"
    },
    {
      "question": "What is hoisting in JavaScript?",
      "answer": "Hoisting is a JavaScript mechanism where variable and function declarations are moved to the top of their containing scope during the compile phase.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a promise in JavaScript?",
      "answer": "A promise is an object that represents the eventual completion or failure of an asynchronous operation and its resulting value.",
      "topic": "JavaScript"
    },
    {
      "question": "What are async and await in JavaScript?",
      "answer": "Async and await are syntax features that make it easier to work with promises. 'async' declares an asynchronous function, and 'await' pauses the execution until the promise is resolved.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between 'null' and 'undefined' in JavaScript?",
      "answer": "'null' is an assignment value representing no value, while 'undefined' indicates that a variable has been declared but not yet assigned a value.",
      "topic": "JavaScript"
    },
    {
      "question": "What is an IIFE in JavaScript?",
      "answer": "An IIFE (Immediately Invoked Function Expression) is a function that is executed immediately after it is defined.",
      "topic": "JavaScript"
    },
    {
      "question": "What are JavaScript modules?",
      "answer": "JavaScript modules are files containing code that can be imported and exported, allowing for better organization and reuse of code.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the 'prototype' property in JavaScript?",
      "answer": "The 'prototype' property allows you to add properties and methods to an object constructor, which will be inherited by all instances of the object.",
      "topic": "JavaScript"
    },
    {
      "question": "What is event delegation in JavaScript?",
      "answer": "Event delegation is a technique of using a single event listener to manage all events of a particular type within a parent element, leveraging event bubbling.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between 'call', 'apply', and 'bind' in JavaScript?",
      "answer": "'call' and 'apply' invoke a function with a specified 'this' value and arguments. 'call' accepts arguments individually, while 'apply' accepts an array. 'bind' returns a new function with a specified 'this' value.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a promise chain in JavaScript?",
      "answer": "A promise chain is a series of promise calls chained together, where each subsequent call starts after the previous one has completed.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a callback function in JavaScript?",
      "answer": "A callback function is a function passed as an argument to another function, which is executed after the completion of the outer function.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a higher-order function in JavaScript?",
      "answer": "A higher-order function is a function that takes another function as an argument, returns a function, or both.",
      "topic": "JavaScript"
    },
    {
      "question": "What are generators in JavaScript?",
      "answer": "Generators are special functions that can be paused and resumed, allowing you to write iterative algorithms in a more readable way using the 'function*' syntax and 'yield' keyword.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the spread operator in JavaScript?",
      "answer": "The spread operator (...) allows an iterable such as an array or string to be expanded in places where zero or more arguments or elements are expected.",
      "topic": "JavaScript"
    },
    {
      "question": "What are template literals in JavaScript?",
      "answer": "Template literals are string literals allowing embedded expressions. They use backticks (`) and support multi-line strings and interpolation with ${expression}.",
      "topic": "JavaScript"
    },
    {
      "question": "What is destructuring in JavaScript?",
      "answer": "Destructuring is a syntax feature that allows you to unpack values from arrays or properties from objects into distinct variables.",
      "topic": "JavaScript"
    },
    {
      "question": "What are default parameters in JavaScript?",
      "answer": "Default parameters allow function parameters to be initialized with default values if no value or undefined is passed.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between 'map', 'filter', and 'reduce' in JavaScript?",
      "answer": "'map' creates a new array by applying a function to each element. 'filter' creates a new array with elements that pass a condition. 'reduce' applies a function to each element, accumulating the results into a single value.",
      "topic": "JavaScript"
    },
    {
      "question": "What is 'use strict' in JavaScript?",
      "answer": "'use strict' is a directive that enables strict mode, which catches common coding errors and improves performance by enforcing stricter parsing and error handling.",
      "topic": "JavaScript"
    },
    {
      "question": "What is JSON in JavaScript?",
      "answer": "JSON (JavaScript Object Notation) is a lightweight data-interchange format that is easy for humans to read and write, and easy for machines to parse and generate.",
      "topic": "JavaScript"
    },
    {
      "question": "What is localStorage in JavaScript?",
      "answer": "localStorage is a web storage API that allows you to store key-value pairs in the browser without expiration, surviving page reloads and browser restarts.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between '== null' and '=== null' in JavaScript?",
      "answer": "'== null' checks for both null and undefined values due to type coercion, while '=== null' strictly checks for null values only.",
      "topic": "JavaScript"
    },
    {
      "question": "What is function currying in JavaScript?",
      "answer": "Function currying is the process of transforming a function with multiple arguments into a sequence of functions, each taking a single argument.",
      "topic": "JavaScript"
    },
    {
      "question": "What are the differences between 'let' and 'var' in JavaScript?",
      "answer": "'let' is block-scoped and does not hoist the variable to the top of its block, whereas 'var' is function-scoped and hoists the variable to the top of its function.",
      "topic": "JavaScript"
    },
    {
      "question": "What is event bubbling in JavaScript?",
      "answer": "Event bubbling is a type of event propagation where the event starts from the target element and bubbles up to the outer elements, eventually reaching the document object.",
      "topic": "JavaScript"
    },
    {
      "question": "What is debouncing in JavaScript?",
      "answer": "Debouncing is a technique used to ensure that a function is only executed once after a specified period of time has elapsed since the last time it was invoked.",
      "topic": "JavaScript"
    },
    {
      "question": "What is throttling in JavaScript?",
      "answer": "Throttling is a technique used to limit the execution of a function to once every specified interval, ensuring the function is not called too frequently.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between an 'undefined' and 'not defined' variable in JavaScript?",
      "answer": "An 'undefined' variable is declared but not assigned a value, whereas a 'not defined' variable has not been declared in the scope.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a prototype chain in JavaScript?",
      "answer": "A prototype chain is a series of links between objects that allows properties and methods to be inherited from parent objects.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the DOM in JavaScript?",
      "answer": "The DOM (Document Object Model) is a programming interface for HTML and XML documents, representing the structure of a document as a tree of objects.",
      "topic": "JavaScript"
    },
    {
      "question": "What are promises and how do you use them?",
      "answer": "Promises are objects representing the eventual completion or failure of an asynchronous operation. They are used by creating a new Promise and handling the result with 'then' and 'catch' methods.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the difference between synchronous and asynchronous code in JavaScript?",
      "answer": "Synchronous code executes sequentially, blocking further execution until the current operation completes, while asynchronous code allows other operations to continue before the current one completes.",
      "topic": "JavaScript"
    },
    {
      "question": "What are JavaScript design patterns?",
      "answer": "JavaScript design patterns are reusable solutions to common software design problems, such as Singleton, Factory, Observer, and Module patterns.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a Symbol in JavaScript?",
      "answer": "A Symbol is a unique and immutable data type introduced in ECMAScript 6, used to create unique object property keys.",
      "topic": "JavaScript"
    },
    {
      "question": "What is 'use strict' and what are its advantages?",
      "answer": "'use strict' is a directive that enables strict mode, which helps catch common coding errors and enforces a stricter parsing and execution of JavaScript.",
      "topic": "JavaScript"
    },
    {
      "question": "What are JavaScript frameworks and libraries?",
      "answer": "JavaScript frameworks and libraries are collections of pre-written JavaScript code that provide standard solutions for common tasks, such as React, Angular, Vue, and jQuery.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the purpose of the 'Array.prototype.slice' method?",
      "answer": "The 'Array.prototype.slice' method returns a shallow copy of a portion of an array into a new array object, selected from start to end (end not included).",
      "topic": "JavaScript"
    },
    {
      "question": "What is a higher-order array method in JavaScript?",
      "answer": "Higher-order array methods are functions that operate on arrays and return a new array or value, such as 'map', 'filter', 'reduce', 'forEach', and 'find'.",
      "topic": "JavaScript"
    },
    {
      "question": "What is the 'async' and 'await' syntax?",
      "answer": "The 'async' keyword is used to declare an asynchronous function, and 'await' pauses the execution of the function until a promise is resolved, making asynchronous code easier to read and write.",
      "topic": "JavaScript"
    },
    {
      "question": "What is a REST API and how do you interact with it using JavaScript?",
      "answer": "A REST API is a set of web services that follow the Representational State Transfer architectural style. You can interact with it using JavaScript by making HTTP requests with 'fetch' or 'XMLHttpRequest'.",
      "topic": "JavaScript"
    }
  ]
  
  